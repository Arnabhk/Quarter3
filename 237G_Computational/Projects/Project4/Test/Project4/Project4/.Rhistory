q5$Spot <- 200*((1/q5$Dt)^(1/(2*q5$Mat)) - 1)
q5$DtNew_up <- 1/((1+((q5$Spot+1)/200))^(2*q5$Mat))
q5$DtNew_down <- 1/((1+((q5$Spot-1)/200))^(2*q5$Mat))
q5$NewPrice_up <- rep(NA,nrow(q5))
q5$NewPrice_down <- rep(NA,nrow(q5))
for(i in 1:nrow(q5)){
q5[i,"NewPrice_up"]<- sum((q5$ParRa[i]/2) * q5$DtNew_up[1:i]) + (100 * q5$DtNew_up[i])
q5[i,"NewPrice_down"]<- sum((q5$ParRa[i]/2) * q5$DtNew_down[1:i]) + (100 * q5$DtNew_down[i])
}
q5$NewPrice_up
q5$up_priceCh <- (100 - q5$NewPrice_up)
q5$down_priceCh <- (100 - q5$NewPrice_down)
kable(q5[c(2,4,6,8,10),c("Mat","up100bp","down100bp","up_priceCh","down_priceCh")])
q5$up_priceCh <- (q5$NewPrice_up - 100)
q5$down_priceCh <- (q5$NewPrice_down - 100)
kable(q5[c(2,4,6,8,10),c("Mat","up100bp","down100bp","up_priceCh","down_priceCh")])
colnames(amounts.new1) <- c("Bill","Note")
colnames(result1) <- c("Bill","Note")
result1
result1 <- matrix((amounts - amounts.new1)*bond.price/100,nrow=1)
colnames(result1) <- c("Bill","Note")
result1
# Chunk 1
suppressMessages(require(readxl))
suppressMessages(require(knitr))
setwd("C:/_UCLA/Quarter3/237F_FixedIncome/Assignment/Assignment2")
read_excel_allsheets <- function(filename) {
sheets <- readxl::excel_sheets(filename)
x <-    lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
names(x) <- sheets
x
}
data <- read_excel_allsheets("Homework 2 Data.xlsx")
data$`T-Note` <- data$`T-Note`[-nrow(data$`T-Note`),]
tnote <- data$`T-Note`
tnote$Mat2 <- tnote$Maturity^2
tnote$Mat3 <- tnote$Maturity^3
tnote$Mat4 <- tnote$Maturity^4
tnote$Mat5 <- tnote$Maturity^5
reg2 <- lm(Yield ~ Maturity+Mat2+Mat3+Mat4+Mat5 , data = tnote)
par_semi <- data.frame(Mat=seq(0.5,25,by = 0.5))
par_semi$Mat2 <- par_semi$Mat^2
par_semi$Mat3 <- par_semi$Mat^3
par_semi$Mat4 <- par_semi$Mat^4
par_semi$Mat5 <- par_semi$Mat^5
par_semi$Par <- reg2$coefficients[1] + (as.matrix(par_semi[,c("Mat","Mat2","Mat3","Mat4","Mat5")]) %*% matrix(reg2$coefficients[-1],ncol=1))
par_semi$Dt <- rep(NA,nrow(par_semi))
for(count in 1:nrow(par_semi)){
par_semi$Dt[count] <- (100 - ((par_semi$Par[count]/2)*(sum(par_semi$Dt[1:count],na.rm = T))))/(100 + (par_semi$Par[count]/2))
}
# Chunk 2
par_semi$ParRa <- rep(NA,nrow(par_semi))
for(count in 1:nrow(par_semi)){
par_semi$ParRa[count] <- 200*(1-par_semi$Dt[count])/(sum(par_semi$Dt[1:count]))
}
result1 <- par_semi[seq(2,50,by=2),c("Mat","ParRa")]
kable(result1[c(1,2,3,23,24,25),])
plot(x=result1$Mat, y =result1$ParRa, main="Par Rate for the various maturities", xlab="Maturity", ylab="Par Rate", type="l")
# Chunk 3
q2 <- par_semi[seq(2,50,by=2),c("Mat","ParRa","Dt")]
parRateMinus1 <- q2$ParRa - 0.01
q2$PriceDV01 <- (q2$ParRa/2)*(1/(parRateMinus1/200)*(1 - (1/(1+(parRateMinus1/200))^(2*q2$Mat)))) + 100/((1+(parRateMinus1/200))^(2*q2$Mat))
q2$DV01 <- q2$PriceDV01 - 100
kable(q2[c(1,2,3,23,24,25),c("Mat","DV01")],col.names = c("Maturity","DV01"))
plot(x=q2$Mat, y =q2$DV01, main="DV01 for the various maturities", xlab="Maturity", ylab="DV01", type="l")
# Chunk 4
q3 <- par_semi[1:10,c("Mat","ParRa","Dt")]
q3$MCDuration <- rep(NA,nrow(q3))
q3$ModDuration <- rep(NA,nrow(q3))
q3$Price <- rep(NA,nrow(q3))
for(i in 1:nrow(q3))
{
numtr <- sum((1:i) * (q3$ParRa[i]/2) * q3$Dt[1:i]) + (i*100*q3$Dt[i])
q3[i,"Price"] <- sum((q3$ParRa[i]/2) * q3$Dt[1:i]) + (100*q3$Dt[i])
q3[i,"MCDuration"] <- numtr / (q3[i,"Price"]*2)
q3[i,"ModDuration"] <- q3[i,"MCDuration"]/(1+(q3$ParRa[i]/200))
}
kable(q3[c(2,4,6,8,10),c("Mat","MCDuration","ModDuration")], col.names = c("Maturity","Macauley Duration","Modified Duration"))
# Chunk 5
liabAmt <- 5000000
pv <- liabAmt * par_semi[par_semi$Mat == 3,"Dt"]
pv
# Chunk 6
k <- 2
q5 <- q3[1:10,c("Mat","ParRa","Dt","ModDuration")]
q5$Convexity <- rep(NA,nrow(q5))
for(i in 1:nrow(q5))
{
numtr <- sum((1:i) * ((1:i) + 1) * (q5$ParRa[i]/2) * q5$Dt[1:i]) + (i * (i+1) * 100 * q5$Dt[i])
dtr <- ((1+(q5$ParRa[i]/(k*100)))^2) * (k^2) * 100
q5[i,"Convexity"] <- numtr / dtr
}
kable(q5[c(2,4,6,8,10),c("Mat","Convexity")],col.names=c("Maturity","Convexity"))
q5$up100bp <- rep(NA,nrow(q5))
q5$down100bp <- rep(NA,nrow(q5))
for(i in 1:nrow(q5)){
q5[i,"up100bp"] <- -q5[i,"ModDuration"] *0.01 * 100 + (0.5 * q5[i,"Convexity"] * (0.01)^2 * 100)
q5[i,"down100bp"] <- q5[i,"ModDuration"] *0.01 * 100 + (0.5 * q5[i,"Convexity"] * (0.01)^2 * 100)
}
q5$Spot <- 200*((1/q5$Dt)^(1/(2*q5$Mat)) - 1)
q5$DtNew_up <- 1/((1+((q5$Spot+1)/200))^(2*q5$Mat))
q5$DtNew_down <- 1/((1+((q5$Spot-1)/200))^(2*q5$Mat))
q5$NewPrice_up <- rep(NA,nrow(q5))
q5$NewPrice_down <- rep(NA,nrow(q5))
for(i in 1:nrow(q5)){
q5[i,"NewPrice_up"]<- sum((q5$ParRa[i]/2) * q5$DtNew_up[1:i]) + (100 * q5$DtNew_up[i])
q5[i,"NewPrice_down"]<- sum((q5$ParRa[i]/2) * q5$DtNew_down[1:i]) + (100 * q5$DtNew_down[i])
}
q5$up_priceCh <- (q5$NewPrice_up - 100)
q5$down_priceCh <- (q5$NewPrice_down - 100)
q5$NewPrice_up
library(quantmod)
getSymbols("GOOGL")
getSymbols("GOOGL")
GOOGL
nrow(GOOGL)
GOOGL
periodicity(GOOGL)
to.monthly(GOOGL)
head(to.monthly(GOOGL))
goog.monthly <- head(to.monthly(GOOGL))
goog.monthly[,"GOOGL.Adjusted"]
goog.monthly[,"GOOGL.Adjusted"]
index(goog.monthly)
library(RQuantLib)
?bscallimpvol
bscallimpvol(905.69,990,0.02,0.75,0,27.9)
0.9735^40
(0.9735^40)*32
choose(40,0)
choose(40,0) * prob^0 * (1-prob)^40
choose(40,0) * 0.504^0 * (1-0.504)^40
choose(40,19)
choose(40,19) * 0.504^19 * (1-0.504)^(40-19)
choose(40,19)
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
q3
q3[1,]
plot(q3[1,c(1:31)])
q3[1,c(1:31)]
seq(20,80,2)
plot(x=seq(20,80,2),y=q3[1,c(1:31)])
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = l)
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l")
q3[1,c(1:38)]
q3[2,c(1:38)]
seq(1,38)
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
q3[3,]
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
q3[4,c(1:31)]
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
setwd('C:/_UCLA/Quarter3/RiskMgmt')
library(readxl)
data <- read.csv("indices.csv")
data <- xts(data[,-1],mdy(data$ï..date))
weights <- c(0.4,0.5,0.1)
data$SP500 <- (data$SP500 - lag(data$SP500))/ lag(data$SP500)
data$NASDAQCOM <- (data$NASDAQCOM - lag(data$NASDAQCOM))/ lag(data$NASDAQCOM)
data$DJIA <- (data$DJIA - lag(data$DJIA))/ lag(data$DJIA)
portret <- apply(data,1,function(x){
x%*%weights
})
portret <- xts(portret,index(data))
c <- 0.99
valPtVar <- ceiling((1-c)*length(portret))
valPtEs <- floor((1-c)*length(portret))
portret <- as.data.frame(portret)
portret <- portret[order(portret[,1]),]
#VaR
portret[valPtVar]
mean(portret,na.rm = T)
sd(portret,na.rm = T)
#ES
expected <- portret[1:valPtEs]
mean(expected) * 10000000
library(lubridate)
data <- xts(data[,-1],mdy(data$ï..date))
weights <- c(0.4,0.5,0.1)
data$SP500 <- (data$SP500 - lag(data$SP500))/ lag(data$SP500)
data$NASDAQCOM <- (data$NASDAQCOM - lag(data$NASDAQCOM))/ lag(data$NASDAQCOM)
data$DJIA <- (data$DJIA - lag(data$DJIA))/ lag(data$DJIA)
portret <- apply(data,1,function(x){
x%*%weights
})
portret <- xts(portret,index(data))
c <- 0.99
valPtVar <- ceiling((1-c)*length(portret))
valPtEs <- floor((1-c)*length(portret))
portret <- as.data.frame(portret)
portret <- portret[order(portret[,1]),]
#VaR
portret[valPtVar]
mean(portret,na.rm = T)
sd(portret,na.rm = T)
#ES
expected <- portret[1:valPtEs]
mean(expected) * 10000000
data <- read.csv("indices.csv")
data <- xts(data[,-1],mdy(data$ï..date))
weights <- c(0.4,0.5,0.1)
data$SP500 <- (data$SP500 - lag(data$SP500))/ lag(data$SP500)
data$NASDAQCOM <- (data$NASDAQCOM - lag(data$NASDAQCOM))/ lag(data$NASDAQCOM)
data$DJIA <- (data$DJIA - lag(data$DJIA))/ lag(data$DJIA)
portret <- apply(data,1,function(x){
x%*%weights
})
portret <- xts(portret,index(data))
c <- 0.99
valPtVar <- ceiling((1-c)*length(portret))
valPtEs <- floor((1-c)*length(portret))
portret <- as.data.frame(portret)
portret <- portret[order(portret[,1]),]
#VaR
portret[valPtVar]
mean(portret,na.rm = T)
sd(portret,na.rm = T)
#ES
expected <- portret[1:valPtEs]
mean(expected) * 10000000
portret <- apply(data,1,function(x){
x%*%weights
})
portret <- xts(portret,index(data))
stressVar <- c()
for(x in 1:(length(portret)-251)){
finalVal <- x + 251
sample <- portret[x:finalVal]
sample <- as.data.frame(sample)
sample <- sample[order(sample[,1]),]
point <- ceiling((1-c)*length(sample))
stressVar[x] <- sample[point]
}
stressVar
min(stressVar)
min(stressVar)*10000000
mean(expected) * 10000000
portret[valPtVar]
setwd('C:/_UCLA/Quarter3/RiskMgmt')
library(readxl)
library(lubridate)
data <- read.csv("indices.csv")
data <- xts(data[,-1],mdy(data$ï..date))
weights <- c(0.4,0.5,0.1)
data$SP500 <- (data$SP500 - lag(data$SP500))/ lag(data$SP500)
data$NASDAQCOM <- (data$NASDAQCOM - lag(data$NASDAQCOM))/ lag(data$NASDAQCOM)
data$DJIA <- (data$DJIA - lag(data$DJIA))/ lag(data$DJIA)
portret <- apply(data,1,function(x){
x%*%weights
})
portret <- xts(portret,index(data))
c <- 0.99
valPtVar <- ceiling((1-c)*length(portret))
valPtEs <- floor((1-c)*length(portret))
portret <- as.data.frame(portret)
portret <- portret[order(portret[,1]),]
valPtVar
portret
portret[valPtVar]
expected <- portret[1:valPtEs]
mean(expected) * 10000000
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,38),y=q3[2,c(1:38)],type = "l", main="Delta")
q3
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
q3
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,39),y=q3[2,c(1:39)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
#d
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
#e
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
#f
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
q3
q3 <- read.csv("Q3.csv",header=FALSE)
q3
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
#b
plot(x=seq(1,39),y=q3[2,c(1:39)],type = "l", main="Delta")
#c
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
#d
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
q3 <- read.csv("Q3.csv",header=FALSE)
q3
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,39),y=q3[2,c(1:39)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
setwd("C:/_UCLA/Quarter3/237G_Computational/Projects/Project4/Project3")
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
plot(x=seq(1,39),y=q3[2,c(1:39)],type = "l", main="Delta")
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
q1 <- read.csv("Q1.csv",header=FALSE)
q1
plot(q1[1,],main="Plot of convergence of call option pricing")
c(10,20,40,80,100,200,500)
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing")
c(1:7)
q1 <- q1[,c(1:7)]
q1
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing")
par(mfrow=c(1,1))
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing", type="l")
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing", type="l", ylab="Call price", xlab="N")
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing", type="l", ylab="Call price", xlab="No of Steps")
plot(x=c(10,20,40,80,100,200,500),y = q1[1,],main="Plot of convergence of call option pricing", type="l", ylab="Call Price", xlab="No of Steps")
xaxis <-c(10,20,40,80,100,200,500)
plot(x=xaxis,y = q1[1,],main="Plot of convergence of call option pricing", type="l", ylab="Call Price", xlab="No of Steps")
lines(x=xaxis,y = q1[2,],col="red")
plot(x=xaxis,y = q1[2,],main="Plot of convergence of call option pricing", type="l", ylab="Call Price", xlab="No of Steps")
lines(x=xaxis,y = q1[1,],col="red")
lines(x=xaxis,y = q1[3,],col="blue")
q1[3,]
q1[2,]
lines(x=xaxis,y = q1[4,],col="green")
q2 <- read.csv("Google_data.csv")
q2
library(xts)
q2[,2]
q2_xts <- xts(q2[,2],as.Date(q2[,1],"%m/%d/%Y"))
q2_xts
q2_xts$returns <- (q2_xts - lag(q2_xts))/(lag(q2_xts))
q2_xts
returns <- (q2_xts - lag(q2_xts))/(lag(q2_xts))
returns
apply.yearly(returns,sd)
to.period(returns,"years")
returns
returns
to.period(returns,"years")
to.period(returns,period = "year")
to.period(returns,period = "years")
returns1 <- to.period(returns,period = "years")
returns1
to.period(returns,period = "years")
returns
apply.yearly(1+returns,prod)
apply.yearly(1+returns,prod)-1
returns.yearly <- apply.yearly(1+returns,prod)-1
sd(returns.yearly)
sd(returns.yearly,na.rm=T)
q3 <- read.csv("Q3.csv",header=FALSE)
par(mfrow=c(3,2))
#a
plot(x=seq(20,80,2),y=q3[1,c(1:31)],type = "l", main="Delta")
#b
plot(x=seq(1,39),y=q3[2,c(1:39)],type = "l", main="Delta")
#c
plot(x=seq(20,80,2),y=q3[3,c(1:31)],type = "l", main="Theta")
#d
plot(x=seq(20,80,2),y=q3[4,c(1:31)],type = "l", main="Gamma")
#e
plot(x=seq(20,80,2),y=q3[5,c(1:31)],type = "l", main="Vega")
#f
plot(x=seq(20,80,2),y=q3[6,c(1:31)],type = "l", main="Rho")
returns.yearly
0.02
0.75
27.9
?bscallimpvol
bscallimpvol(916.44000200000005,1000,0.02,0.75,0,23.9)
q4 <- read.csv("Q4.csv",header=FALSE)
q4
q4 <- q4[,c(1:11)]
q4
seq(80,120,4)
plot(x=seq(80,120,4),y=q4[1,],main="Plot of European and American Put Option price", xlab="Current stock price", ylab="Put Price")
par(mfrow=c(1,1))
q4 <- read.csv("Q4.csv",header=FALSE)
q4 <- q4[,c(1:11)]
plot(x=seq(80,120,4),y=q4[1,],main="Plot of European and American Put Option price", xlab="Current stock price", ylab="Put Price", type="l")
lines(x=seq(80,120,4),y=q4[2,],col="blue")
plot(x=seq(80,120,4),y=q4[2,],main="Plot of European and American Put Option price", xlab="Current stock price", ylab="Put Price", type="l")
lines(x=seq(80,120,4),y=q4[1,],col="blue")
legend("topright",c("European","American"),col=c("blue","black"),lty=1)
q1 <- read.csv("Q1.csv",header=FALSE)
q1 <- q1[,c(1:7)]
par(mfrow=c(1,1))
xaxis <-c(10,20,40,80,100,200,500)
plot(x=xaxis,y = q1[2,],main="Plot of convergence of call option pricing", type="l", ylab="Call Price", xlab="No of Steps")
lines(x=xaxis,y = q1[1,],col="red")
lines(x=xaxis,y = q1[4,],col="green")
q1 <- read.csv("Q1.csv",header=FALSE)
q1 <- q1[,c(1:7)]
par(mfrow=c(1,1))
xaxis <-c(10,20,40,80,100,200,500)
plot(x=xaxis,y = q1[2,],main="Plot of convergence of call option pricing", type="l", ylab="Call Price", xlab="No of Steps")
lines(x=xaxis,y = q1[1,],col="red")
lines(x=xaxis,y = q1[3,],col="blue")
lines(x=xaxis,y = q1[4,],col="green")
legend("topright",c("Method 1","Method 2","Method 3","Method 4"),col=c("red","black","blue","green"),lty=1)
q5 <- read.csv("Q5.csv",header=FALSE)
q5
c(1:9)
q5 <- q5[,c(1:9)]
q5
xaxis <- c(10,15,20,40,70,80,100,200,500)
xaxis
plot(x=xaxis,y=q5[1,],main="Plot of trinomial call price", xlab="No of time steps", ylab="Call Price", type="l")
lines(x=xaxis,y=q5[2,],col="blue")
legend("bottomright",c("Method 1","Method 2"),col=c("black","blue"),lty=1)
legend("bottomright",c("Stock Prices","Log Stock prices"),col=c("black","blue"),lty=1)
library(derivmkts)
library(fOptions)
?BlackScholesOption
GBSOption(TypeFlag = 'c', S=32,X=30,Time=0.5,r=0.05,b=0,sigma=0.24)
BlackScholesOption(TypeFlag = 'c', S=32,X=30,Time=0.5,r=0.05,b=0,sigma=0.24)
blackscholes <- function(S, X, rf, Time, sigma) {
values <- c(2)
d1 <- (log(S/X)+(rf+sigma^2/2)*Time)/(sigma*sqrt(Time))
d2 <- d1 - sigma * sqrt(Time)
values[1] <- S*pnorm(d1) - X*exp(-rf*Time)*pnorm(d2)
values[2] <- X*exp(-rf*Time) * pnorm(-d2) - S*pnorm(-d1)
values
}
blackscholes(S = 32,X=30,Time=0.5,r=0.05,sigma = 0.24)
par(mfrow=c(1,1))
q5 <- read.csv("Q5.csv",header=FALSE)
q5 <- q5[,c(1:9)]
xaxis <- c(10,15,20,40,70,80,100,200,500)
plot(x=xaxis,y=q5[1,],main="Plot of trinomial call price", xlab="No of time steps", ylab="Call Price", type="l")
lines(x=xaxis,y=q5[2,],col="blue")
legend("bottomright",c("Stock Prices","Log Stock prices"),col=c("black","blue"),lty=1)
